input {
  beats {
    port => 5044
  }
}

filter {
    if [log][file][path] == "/var/log/auth.log" {
        grok {
            match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{WORD:hostname} %{DATA:program}(?:\[%{DATA:pid}\])?: pam_unix(?:\(%{DATA:pam_unix_module_name}\))?: %{DATA:auth_failed_message}; logname=%{DATA:logname} uid=%{NUMBER:uid} euid=%{NUMBER:euid} tty=%{DATA:tty} ruser=%{DATA:ruser} rhost=::%{DATA:rm_data}:%{IPV4:rhost}  user=%{GREEDYDATA:luser}" }
            match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{WORD:hostname} %{DATA:program}(?:\[%{DATA:pid}\])?: pam_unix(?:\(%{DATA:pam_unix_module_name}\))?: %{DATA:auth_failed_message}; logname=%{DATA:logname} uid=%{NUMBER:uid} euid=%{NUMBER:euid} tty=%{DATA:tty} ruser=%{DATA:ruser} rhost=%{IPV4:rhost} user=%{GREEDYDATA:luser}" }
            match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{WORD:hostname} %{DATA:program}(?:\[%{DATA:pid}\])?: pam_unix(?:\(%{DATA:pam_unix_module_name}\))?: %{DATA:auth_failed_message}; logname=%{DATA:logname} uid=%{NUMBER:uid} euid=%{NUMBER:euid} tty=%{DATA:tty} ruser=%{DATA:ruser} rhost=%{DATA:rhost} user=%{GREEDYDATA:luser}" }
        }
        mutate { 
		    remove_field => [ "rm_data","message" ]
            add_tag => ["auth.log"]
		}
        if "_grokparsefailure" in [tags] {
		    drop { }
		}
    }
    if [log][file][path] == "/home/piyush/ASID/corelation.log" {
        mutate {
            add_tag => ["corelation.log"]
        }
    }
}

output {
    if "auth.log" in [tags] {
        elasticsearch {
        	hosts => [ "localhost:9200" ]
        	index => "authentication_failed_index"
        }
    }
    if "corelation.log" in [tags] {
	    elasticsearch {
        	hosts => [ "localhost:9200" ]
        	index => "corelation_index"
        }
    }
}